within {{project_name}}.Loads.{{model_name}};
model coupling
  "FMU Template for Spawn"

 replaceable package MediumW = Buildings.Media.Water
   "Source side medium";
 replaceable package MediumA = Buildings.Media.Air
   "Load side medium";

{% raw %}
  Buildings.Applications.DHC.Loads.Examples.BaseClasses.BuildingSpawnZ1 bui(
      nPorts_a=2,
      nPorts_b=2)
      "Building"
      annotation (Placement(transformation(extent={{40,-40},{60,-20}})));
  Buildings.Fluid.Sources.MassFlowSource_T supHeaWat(
      use_m_flow_in=true,
      redeclare package Medium = MediumW,
      use_T_in=true,
      nPorts=1) "Heating water supply"
      annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=0,
          origin={-30,0})));
  Modelica.Blocks.Sources.RealExpression THeaWatSup(y=bui.terUni.T_aHeaWat_nominal)
      "Heating water supply temperature"
      annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));
  Modelica.Blocks.Sources.RealExpression mHeaWat_flow(y=bui.disFloHea.mReqTot_flow)
      "Heating water flow rate"
      annotation (Placement(transformation(extent={{-80,10},{-60,30}})));
  Buildings.Fluid.Sources.MassFlowSource_T supChiWat(
      use_m_flow_in=true,
      redeclare package Medium = MediumW,
      use_T_in=true,
      nPorts=1) "Chilled water supply"
      annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=0,
          origin={-30,-80})));
  Modelica.Blocks.Sources.RealExpression TChiWatSup(y=bui.terUni.T_aChiWat_nominal)
      "Chilled water supply temperature"
      annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
  Modelica.Blocks.Sources.RealExpression mChiWat_flow(y=bui.disFloCoo.mReqTot_flow)
      "Chilled water flow rate"
      annotation (Placement(transformation(extent={{-80,-70},{-60,-50}})));
  Buildings.Fluid.Sources.Boundary_pT sinHeaWat(
      redeclare package Medium = MediumW,
      p=300000,
      nPorts=1) "Sink for heating water" annotation (Placement(transformation(
          extent={{10,-10},{-10,10}},
          rotation=0,
          origin={130,0})));
  Buildings.Fluid.Sources.Boundary_pT sinChiWat(
      redeclare package Medium = MediumW,
      p=300000,
      nPorts=1) "Sink for chilled water" annotation (Placement(transformation(
          extent={{10,-10},{-10,10}},
          rotation=0,
          origin={130,-80})));
{% endraw %}
equation
{% raw %}
    connect(THeaWatSup.y, supHeaWat.T_in) annotation (Line(points={{-59,0},{-50,0},
            {-50,4},{-42,4}}, color={0,0,127}));
    connect(mHeaWat_flow.y, supHeaWat.m_flow_in) annotation (Line(points={{-59,20},
            {-50,20},{-50,8},{-42,8}}, color={0,0,127}));
    connect(TChiWatSup.y, supChiWat.T_in) annotation (Line(points={{-59,-80},{-50,
            -80},{-50,-76},{-42,-76}}, color={0,0,127}));
    connect(mChiWat_flow.y, supChiWat.m_flow_in) annotation (Line(points={{-59,
            -60},{-50,-60},{-50,-72},{-42,-72}}, color={0,0,127}));
    connect(supHeaWat.ports[1], bui.ports_a[1]) annotation (Line(points={{-20,0},
            {0,0},{0,-50},{20,-50}}, color={0,127,255}));
    connect(supChiWat.ports[1], bui.ports_a[2]) annotation (Line(points={{-20,-80},
            {0,-80},{0,-46},{20,-46}},      color={0,127,255}));
    connect(bui.ports_b[1], sinHeaWat.ports[1]) annotation (Line(points={{80,-50},
            {94,-50},{94,0},{120,0}}, color={0,127,255}));
    connect(bui.ports_b[2], sinChiWat.ports[1]) annotation (Line(points={{80,-46},
            {94,-46},{94,-80},{120,-80}}, color={0,127,255}));
{% endraw %}

  // TODO: determine how to handle the "lines"
{% raw %}
annotation (Diagram(
       coordinateSystem(preserveAspectRatio=false, extent={{-120,-100},{160,60}}),
       graphics={Text(
         extent={{-46,36},{86,10}},
         lineColor={28,108,200},
         textString="")}),
     __Dymola_Commands(file=
         "Resources/Scripts/Dymola/SpawnTwoBuildings/CouplingSpawnZ6.mos"
       "Simulate and plot"),
      experiment(
                 StopTime=604800,
                 Tolerance=1e-06,
                 __Dymola_Algorithm="Cvode"),
Documentation (info=
"<html>
<p>
This example illustrates the use of
<a href=\"modelica://Buildings.Applications.DHC.Loads.BaseClasses.PartialBuilding\">
Buildings.Applications.DHC.Loads.BaseClasses.PartialBuilding</a>,
<a href=\"modelica://Buildings.Applications.DHC.Loads.BaseClasses.PartialTerminalUnit\">
Buildings.Applications.DHC.Loads.BaseClasses.PartialTerminalUnit</a>
and
<a href=\"modelica://Buildings.Applications.DHC.Loads.BaseClasses.FlowDistribution\">
Buildings.Applications.DHC.Loads.BaseClasses.FlowDistribution</a>
in a configuration with:
</p>
<ul>
<li>
six-zone building model based on EnergyPlus envelope model (from
GeoJSON export),
</li>
<li>
secondary pumps.
</li>
</ul>
<p>
Simulation with Dymola requires minimum version 2020x and setting
<code>Hidden.AvoidDoubleComputation=true</code>, see
<a href=\"modelica://Buildings.ThermalZones.EnergyPlus.UsersGuide\">
Buildings.ThermalZones.EnergyPlus.UsersGuide</a>.
</p>
</html>",
revisions=
"<html>
<ul>
<li>
February 21, 2020, by Antoine Gautier:<br/>
First implementation.
</li>
</ul>
</html>"));
{% endraw %}
end coupling;
